name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: worksync
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      - name: Setup Environment
        working-directory: ./server
        run: |
          echo "DB_HOST=127.0.0.1" > .env
          echo "DB_USER=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          echo "DB_NAME=worksync" >> .env
          echo "JWT_SECRET=ci-test-secret-$(date +%s)" >> .env
          echo "NODE_ENV=test" >> .env
          echo "PORT=4100" >> .env
          echo "Environment variables set:"
          cat .env
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Attempt $i: Waiting for MySQL..."
            sleep 2
          done
          echo "Verifying MySQL connection:"
          mysql -h 127.0.0.1 -uroot -proot -e "SELECT 1"
      - name: Init DB
        working-directory: ./server
        run: |
          echo "Starting database initialization..."
          npm run init-db
          echo "Database initialization completed"
      - name: Run tests
        working-directory: ./server
        run: npm test
      - name: Generate coverage report
        working-directory: ./server
        run: npm test -- --coverage || true
